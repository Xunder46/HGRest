//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ngHealthyGarden
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AddressInfo> AddressInfoes { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Comment> Comments { get; set; }
        public virtual DbSet<CustomerInfo> CustomerInfoes { get; set; }
        public virtual DbSet<Dish> Dishes { get; set; }
        public virtual DbSet<ItemCategory> ItemCategories { get; set; }
        public virtual DbSet<Item> Items { get; set; }
        public virtual DbSet<Option> Options { get; set; }
        public virtual DbSet<OrderDetail> OrderDetails { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<OrderType> OrderTypes { get; set; }
        public virtual DbSet<RestaurantInfo> RestaurantInfoes { get; set; }
        public virtual DbSet<Side> Sides { get; set; }
        public virtual DbSet<Size> Sizes { get; set; }
        public virtual DbSet<ZipCode> ZipCodes { get; set; }
    
        public virtual ObjectResult<spGetItemsRelatedToADish_Result> spGetItemsRelatedToADish(string dishName)
        {
            var dishNameParameter = dishName != null ?
                new ObjectParameter("DishName", dishName) :
                new ObjectParameter("DishName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetItemsRelatedToADish_Result>("spGetItemsRelatedToADish", dishNameParameter);
        }
    
        public virtual ObjectResult<spDeleteItemDish_Result> spDeleteItemDish(Nullable<int> dishId, Nullable<int> itemId)
        {
            var dishIdParameter = dishId.HasValue ?
                new ObjectParameter("DishId", dishId) :
                new ObjectParameter("DishId", typeof(int));
    
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("ItemId", itemId) :
                new ObjectParameter("ItemId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDeleteItemDish_Result>("spDeleteItemDish", dishIdParameter, itemIdParameter);
        }
    }
}
